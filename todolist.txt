
    #KNOWN BUGS

# Bats can fly outside the level and disappear.

# player can end up in a "None" level (and crash game) when leaving a level.
    #this can occur with certain combinations of sprinting/jumping while leaving the level.
    #so far it seems to only happen when leaving the level horizontally while jumping and
        #sprinting through a gap of the same height as the player.
    #it's possible that other bugs may occur if the player does this combination of actions, even when not leaving the level.

    #IMMEDIATE STUFF

#NOTE: see dungeoneditorlauncher.py for dungeon editor-specific TODOs.

# Make docstrings for each class

    remaining classes to docstring:

    being
    camera
    dungeonfactory
    entity
    entityfactory

    (delete entityimage.pyc)

    exitblock
    gameimage
    lantern
    level
    levelfactory
    levelgroup      (NOTE: rename this to "dungeon")
    levelobjects

    (delete levelselectcell.py)

    monster
    platform
    platformfactory
    player

    (delete pygame2exe.py and pythontest.py)

    room
    roomfactory
    spritesheet
    spritestripanimator (I think someone else wrote it)
    tile
    tilefactory

    (Also do this for all LevelEditor classes)

# fix movement/rect related stuff, and put all relevant methods in gameImage, to be called by subclasses.
    # This is partially, maybe completely done, but make sure before removing this TODO.
# fix imports to be efficient/useful
# consider removing level_ID, but first try to think of possible uses for it.
# figure out how to handle monsters in complete/partial darkness
    # I put an idea in Being class
    # Keep in mind that the being may occupy multiple tiles

    #LESS IMMEDIATE STUFF

# implement sloping platforms (see link for ideas)
    # since I don't know how pygame's collision method works, try simply making sloping
        # platform sprites and test running up and down on them.
    # http://higherorderfun.com/blog/2012/05/20/the-guide-to-implementing-2d-platformers/
    # also implement one-way platforms, ladders, etc
# Make a launcher that makes it possible to select which dungeon to load
    # It may help to change the dungeoneditor to let the user give different dungeons different saved names.
    # A filelist would be useful for this.
# Make the frameworks that will allow text, dialogs, events, etc.
    # Remember that some things should be skippable while others should not.
# build the enemies extensibly. Make temporary classes/methods if necessary, but plan to replace them later
    # have the bat start hanging from the ceiling and maybe give it "dropping"
        # animation followed by the flying animation
    # change the bat's attack patterns so that it periodically flaps around the player before diving, bounces off, 
        # moves away, and then dives again.
        # (some randomness may make this pattern look more natural)
    # make lighting less laggy for large amounts of light
        # one way might be to only udpate tiles within rectangular areas around light sources.
    # consider possible combat systems (damage, HP, etc)
# make jumping feel more natural

    #SPRITE STUFF

#TODO: consider having tiles/textures be procedurally generated
       # based on hardcoded platform locations/level data and a library of tiles
       # alternately, use the map editor and a tileFactory to load in tiles from images which represent levels
            # using only entities.

        #ENEMY/AI STUFF

#TODO: implement more enemies. Try to give them very different behavior to force mystelf to expand the AI system.
#TODO: when adding AI, try to be creative and extensible, as though this were a roguelike.
#IDEA: could give some monsters strong knockback by increasing the bounce they deliver.
#NOTE: enemies remain in the exact same state they were left in when the player leaves a level. should decide if this is good or bad.

        #PLATFORM STUFF

#TODO: make the "platform" system more complex, possibly with inheritance/factory
        #consider platforms that  the player can jump up through and/or fall through  by tapping down
#TODO: conider making half-steps and/or slopes that can be walked up

        # MISC STUFF

#TODO: make it possible for the player to open up a map screen.
        # (it may help to first rough out a very general design for "screens", "menus", and "controls"
#TODO: make invisible caverns which can be revealed somehow. (test in sunlight first)
#TODO: give exit blocks super terrifying sprites. (they can't be seen normally so it will be a fun surprise if there's a glitch or something)
#TODO: think up lots of cool easter eggs (though this might be more of a long-term thing)